scalar Password
scalar Email
scalar Username
scalar Date

enum RoleCode {
  HOTEL_OWNER,
  ADMIN,
}

enum Permission {
  MANAGE_ROOM,
  READONLY_ROOM,
  MANAGE_RESERVATION,
  READONLY_RESERVATION,
  MANAGE_HOTEL
}

type Hotel @entity @mongodb {
  id: ID! @id
  name: String!
  description: String
  totalCustomers: Int!
}

type Role @entity @mongodb {
  code: RoleCode! @id(from: "user")
  permissions: [Permission]!
}

type UserRole @entity @mongodb {
  id: ID! @id(from: "db") @alias(value: "_id")
  refUserId: ID!
  roleCode: RoleCode!
  role: Role! @innerRef(refFrom: "roleCode", refTo: "code")

  hotelId: ID
  userId: ID
  tenantId: ID
}

type User @entity @mongodb {
  id: ID! @id
  email: Email!
  firstName: String
  lastName: String
  reservations: [Reservation]! @foreignRef
  totalPayments: Int
  roles: [UserRole!]! @foreignRef(refTo: "refUserId")
}

type Reservation @entity @mongodb {
  id: ID! @id
  userId: ID!
  roomId: ID!
  room: Room @innerRef
  hotelId: ID!
}

type Room @entity @mongodb {
  id: ID! @id
  from: Date!
  to: Date!
  hotelId: ID!
  hotel: Hotel! @innerRef
  description: String!
}